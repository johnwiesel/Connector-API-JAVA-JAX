/*
 * ConnectorAPI
 *
 * This file was automatically generated by APIMATIC BETA v2.0 on 02/18/2016
 */
package io.itembase.connector.models;

import java.util.*;

public class HttpApiItembaseIoV1JobV10SchemaJsonBuilder {
    //the instance to build
    private HttpApiItembaseIoV1JobV10SchemaJson httpApiItembaseIoV1JobV10SchemaJson;

    /**
     * Default constructor to initialize the instance
     */
    public HttpApiItembaseIoV1JobV10SchemaJsonBuilder() {
        httpApiItembaseIoV1JobV10SchemaJson = new HttpApiItembaseIoV1JobV10SchemaJson();
    }

    /**
     * Connection uuid for which this job was created.
     */
    public HttpApiItembaseIoV1JobV10SchemaJsonBuilder connectionUuid(String connectionUuid) {
        httpApiItembaseIoV1JobV10SchemaJson.setConnectionUuid(connectionUuid);
        return this;
    }

    /**
     * An ISO 8601 date format, i.E. YYYY-MM-DDThh:mm:ss.sTZD.
     */
    public HttpApiItembaseIoV1JobV10SchemaJsonBuilder createdAt(String createdAt) {
        httpApiItembaseIoV1JobV10SchemaJson.setCreatedAt(createdAt);
        return this;
    }

    /**
     * Contains the origin of the job.
     */
    public HttpApiItembaseIoV1JobV10SchemaJsonBuilder createdBy(String createdBy) {
        httpApiItembaseIoV1JobV10SchemaJson.setCreatedBy(createdBy);
        return this;
    }

    /**
     * An ISO 8601 date format, i.E. YYYY-MM-DDThh:mm:ss.sTZD.
     */
    public HttpApiItembaseIoV1JobV10SchemaJsonBuilder finishedAt(String finishedAt) {
        httpApiItembaseIoV1JobV10SchemaJson.setFinishedAt(finishedAt);
        return this;
    }

    /**
     * Unique identifier of the job
     */
    public HttpApiItembaseIoV1JobV10SchemaJsonBuilder jobId(String jobId) {
        httpApiItembaseIoV1JobV10SchemaJson.setJobId(jobId);
        return this;
    }

    /**
     * Job name.
     */
    public HttpApiItembaseIoV1JobV10SchemaJsonBuilder name(String name) {
        httpApiItembaseIoV1JobV10SchemaJson.setName(name);
        return this;
    }

    /**
     * Contains all request parameters needed to execute the job.
     */
    public HttpApiItembaseIoV1JobV10SchemaJsonBuilder request(LinkedHashMap<String, Object> request) {
        httpApiItembaseIoV1JobV10SchemaJson.setRequest(request);
        return this;
    }

    /**
     * Contains all results of job execution.
     */
    public HttpApiItembaseIoV1JobV10SchemaJsonBuilder result(LinkedHashMap<String, Object> result) {
        httpApiItembaseIoV1JobV10SchemaJson.setResult(result);
        return this;
    }

    /**
     * Job status.
     */
    public HttpApiItembaseIoV1JobV10SchemaJsonBuilder status(Status status) {
        httpApiItembaseIoV1JobV10SchemaJson.setStatus(status);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public HttpApiItembaseIoV1JobV10SchemaJson build() {
        return httpApiItembaseIoV1JobV10SchemaJson;
    }
}